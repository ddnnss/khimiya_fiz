# Generated by Django 2.1.5 on 2019-11-28 15:48

import ckeditor_uploader.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название категории')),
                ('name_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, upload_to='category_img/', verbose_name='Изображение категории')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название страницы SEO')),
                ('page_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание страницы SEO')),
                ('page_keywords', models.TextField(blank=True, null=True, verbose_name='Keywords SEO')),
                ('short_description', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание категории')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотров')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Отображать категорию ?')),
                ('cat_id', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Основная категория',
                'verbose_name_plural': 'Основные категории',
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Фильтр')),
                ('name_slug', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Фильтр',
                'verbose_name_plural': 'Фильтры',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название товара')),
                ('name_lower', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('name_slug', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('discount', models.IntegerField(blank=True, db_index=True, default=0, verbose_name='Скидка %')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название страницы SEO')),
                ('page_description', models.TextField(blank=True, null=True, verbose_name='Описание страницы SEO')),
                ('page_keywords', models.TextField(blank=True, null=True, verbose_name='Keywords SEO')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание товара (отображается на странице товара)')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Краткое описание товара (отображается в карточке товара)')),
                ('good_time', models.CharField(default='1 год', max_length=15, verbose_name='Срок годности')),
                ('weight', models.CharField(default='не указано', max_length=15, verbose_name='Вес')),
                ('ph', models.CharField(blank=True, default='0', max_length=15, verbose_name='pH')),
                ('fasovka', models.CharField(blank=True, default='не указано', max_length=50, null=True, verbose_name='Фасовка')),
                ('zapah', models.CharField(blank=True, default='не указано', max_length=50, null=True, verbose_name='Запах')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Отображать товар ?')),
                ('is_present', models.BooleanField(db_index=True, default=True, verbose_name='Товар в наличии ?')),
                ('item_id', models.IntegerField(default=0)),
                ('buys', models.IntegerField(default=0, verbose_name='Покупок')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотров')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.Filter', verbose_name='Фильтр')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='items', verbose_name='Изображение товара')),
                ('image_small', models.CharField(blank=True, default='', max_length=255)),
                ('is_main', models.BooleanField(default=False, verbose_name='Основная картинка ?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='item.Item', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение для товара',
                'verbose_name_plural': 'Изображения для товара',
            },
        ),
        migrations.CreateModel(
            name='ItemPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(choices=[('л.', 'Литры'), ('шт.', 'Штуки')], default='л.', max_length=5, verbose_name='Еденица измерения')),
                ('volume', models.CharField(db_index=True, default=0, max_length=6, verbose_name='Объем')),
                ('price', models.IntegerField(db_index=True, default=0, verbose_name='Цена')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='item.Item', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Объем и цену',
                'verbose_name_plural': 'Объем и цену',
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Промокод (для создания рандомного значения оставить пустым)')),
                ('promo_discount', models.IntegerField(default=0, verbose_name='Скидка на заказ')),
                ('use_counts', models.IntegerField(blank=True, default=1, verbose_name='Кол-во использований')),
                ('is_unlimited', models.BooleanField(default=False, verbose_name='Неограниченное кол-во использований')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен?')),
                ('expiry', models.DateTimeField(default=datetime.datetime(2019, 11, 28, 15, 48, 45, 478582, tzinfo=utc), verbose_name='Срок действия безлимитного кода')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название подкатегории')),
                ('name_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, upload_to='sub_category_img/', verbose_name='Изображение подкатегории')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название страницы SEO')),
                ('page_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание страницы SEO')),
                ('page_keywords', models.TextField(blank=True, null=True, verbose_name='Keywords SEO')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание подкатегории')),
                ('short_description', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('discount', models.IntegerField(blank=True, default=0, verbose_name='Скидка на все товары в подкатегории %')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотров')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Отображать подкатегорию ?')),
                ('subcat_id', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.Category', verbose_name='Основная категория')),
            ],
            options={
                'verbose_name': 'Основная подкатегория',
                'verbose_name_plural': 'Основные подкатегории',
            },
        ),
        migrations.CreateModel(
            name='SubSubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название подкатегории')),
                ('name_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, upload_to='sub_category_img/', verbose_name='Изображение подкатегории')),
                ('page_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название страницы SEO')),
                ('page_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание страницы SEO')),
                ('page_keywords', models.TextField(blank=True, null=True, verbose_name='Keywords SEO')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание подкатегории')),
                ('short_description', models.TextField(blank=True, verbose_name='Краткое описание')),
                ('discount', models.IntegerField(blank=True, default=0, verbose_name='Скидка на все товары в подкатегории %')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотров')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Отображать подкатегорию ?')),
                ('subsubcat_id', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subcategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.SubCategory', verbose_name='Основная подкатегория')),
            ],
            options={
                'verbose_name': 'Подкатегория',
                'verbose_name_plural': 'Подкатегории',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='subcategory',
            field=models.ManyToManyField(blank=True, db_index=True, to='item.SubSubCategory', verbose_name='Подкатегория'),
        ),
        migrations.AddField(
            model_name='filter',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.SubSubCategory', verbose_name='Подкатегория'),
        ),
    ]
